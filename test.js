// Teste simples das fun√ß√µes CRUD
const app = require('./server');
const http = require('http');

// Simular dados para teste
let testUsers = [
  { id: 1, name: 'Jo√£o Silva', email: 'joao@email.com', age: 25 },
  { id: 2, name: 'Maria Santos', email: 'maria@email.com', age: 30 }
];

let nextTestId = 3;

// Fun√ß√µes CRUD para teste (mesma l√≥gica do servidor)
function createItem(array, item) {
  const newItem = {
    id: nextTestId++,
    ...item,
    createdAt: new Date().toISOString()
  };
  array.push(newItem);
  return newItem;
}

function readItems(array, id = null) {
  if (id) {
    return array.find(item => item.id === parseInt(id));
  }
  return array;
}

function updateItem(array, id, updates) {
  const index = array.findIndex(item => item.id === parseInt(id));
  if (index === -1) return null;
  
  array[index] = {
    ...array[index],
    ...updates,
    id: parseInt(id),
    updatedAt: new Date().toISOString()
  };
  return array[index];
}

function deleteItem(array, id) {
  const index = array.findIndex(item => item.id === parseInt(id));
  if (index === -1) return false;
  
  array.splice(index, 1);
  return true;
}

// Executar testes
function runTests() {
  console.log('üß™ Iniciando testes das fun√ß√µes CRUD...\n');
  
  // Teste CREATE
  console.log('1Ô∏è‚É£ Testando CREATE:');
  const newUser = createItem(testUsers, {
    name: 'Pedro Teste',
    email: 'pedro.teste@email.com',
    age: 28
  });
  console.log('Usu√°rio criado:', newUser);
  console.log('Total de usu√°rios:', testUsers.length);
  console.log('‚úÖ CREATE funcionando\n');
  
  // Teste READ (todos)
  console.log('2Ô∏è‚É£ Testando READ (todos):');
  const allUsers = readItems(testUsers);
  console.log('Todos os usu√°rios:', allUsers);
  console.log('‚úÖ READ (todos) funcionando\n');
  
  // Teste READ (por ID)
  console.log('3Ô∏è‚É£ Testando READ (por ID):');
  const userById = readItems(testUsers, newUser.id);
  console.log('Usu√°rio encontrado:', userById);
  console.log('‚úÖ READ (por ID) funcionando\n');
  
  // Teste UPDATE
  console.log('4Ô∏è‚É£ Testando UPDATE:');
  const updatedUser = updateItem(testUsers, newUser.id, {
    name: 'Pedro Teste Atualizado',
    age: 29
  });
  console.log('Usu√°rio atualizado:', updatedUser);
  console.log('‚úÖ UPDATE funcionando\n');
  
  // Teste DELETE
  console.log('5Ô∏è‚É£ Testando DELETE:');
  const deleted = deleteItem(testUsers, newUser.id);
  console.log('Usu√°rio deletado:', deleted);
  console.log('Total de usu√°rios ap√≥s delete:', testUsers.length);
  console.log('‚úÖ DELETE funcionando\n');
  
  console.log('üéâ Todos os testes passaram com sucesso!');
  console.log('Estado final do array:', testUsers);
}

// Executar testes se o arquivo for executado diretamente
if (require.main === module) {
  runTests();
}

module.exports = {
  createItem,
  readItems,
  updateItem,
  deleteItem,
  runTests
};